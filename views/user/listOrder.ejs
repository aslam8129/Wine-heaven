<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Orders - Wine Shop</title>
    
    <!-- Tailwind CSS -->
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    
    <!-- SweetAlert2 -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

    <style>
        :root {
            --primary-color: #4A6CF7;
            --secondary-color: #6B7280;
            --accent-color: #10B981;
            --background-color: #F9FAFB;
            --text-color: #111827;
        }

        .order-card {
            transition: all 0.3s ease;
            border: 1px solid rgba(0, 0, 0, 0.05);
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.05);
        }

        .order-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 25px -5px rgba(0, 0, 0, 0.1);
        }

        .status-badge {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.375rem 1rem;
            border-radius: 9999px;
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.05em;
        }

        .btn {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
            padding: 0.5rem 1rem;
            border-radius: 0.5rem;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        .btn-cancel {
            background-color: rgb(211, 19, 19);
            color: white;
        }

        .btn-return {
            background-color: var(--primary-color);
            color: white;
        }

        .btn:hover {
            opacity: 0.9;
            transform: translateY(-2px);
        }
    </style>
</head>
<body class="bg-gray-50">
    <%- include('../partials/userHeader.ejs') %>
    
    <div class="container mx-auto px-4 py-8">
        <div class="max-w-7xl mx-auto pb-5">
            <!-- Orders Container -->
            <div class="space-y-6 mt-8">
                <% if (orders) { %>
                    <% orders.items.forEach(order => { %>
                        <div class="bg-white rounded-lg shadow-md border border-gray-100 order-card">
                            <!-- Order Header -->
                            <div class="px-4 py-4 border-b border-gray-100 flex flex-col sm:flex-row justify-between items-center space-y-2 sm:space-y-0">
                                <div>
                                    <h2 class="text-xl font-semibold text-gray-900 text-center sm:text-left">
                                        Order #<%= order._id.toString().slice(-8).toUpperCase() %>
                                    </h2>
                                    <p class="text-sm text-gray-500 mt-1 text-center sm:text-left">
                                        Placed on <%= new Date(orders.createdAt).toLocaleDateString('en-US', { 
                                            year: 'numeric', 
                                            month: 'long', 
                                            day: 'numeric',
                                            hour: '2-digit',
                                            minute: '2-digit'
                                        }) %>
                                    </p>
                                </div>
                                <div class="text-center sm:text-right">
                                    <p class="text-sm text-gray-500">Payment Method</p>
                                    <p class="font-medium text-gray-900"><%= orders.paymentMethod %></p>
                                </div>
                            </div>

                            <!-- Order Content -->
                            <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 p-4 sm:p-6">
                                <!-- Product List -->
                                <div class="lg:col-span-2 space-y-4">
                                    <div class="flex flex-wrap gap-4 mb-6 justify-center sm:justify-start">
                                        <% let hasDownloadableItem = false; %>
                                        <% orders.items.forEach(item => { %>
                                          <% if (item.productStatus !== 'Order Not Conform') { %>
                                            <% hasDownloadableItem = true; %>
                                          <% } %>
                                        <% }); %>
                                        
                                        <% if (hasDownloadableItem) { %>
                                          <a href="/sales-report/download/pdf?orderId=<%= orders._id %>" 
                                             class="bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700 transition">
                                            Download PDF
                                          </a>
                                        <% } %>
                                    </div>
                                    <% orders.items.forEach(item => { %>
                                        <div class="flex flex-col sm:flex-row items-center bg-gray-50 rounded-lg p-4 space-y-4 sm:space-y-0 sm:space-x-4">
                                            <img 
                                                src="/uploads/<%= item.productImage %>" 
                                                alt="<%= item.productName %>" 
                                                class="w-24 h-24 object-cover rounded-md mb-4 sm:mb-0"
                                            >
                                            <div class="flex-grow text-center sm:text-left w-full">
                                                <h3 class="text-lg font-semibold text-gray-900">
                                                    <%= item.productName %>
                                                </h3>
                                                <div class="text-sm text-gray-600 mt-1">
                                                    Quantity: <%= item.productCount %>
                                                </div>
                                                
                                                <div class="mt-2 font-medium text-gray-900 flex flex-col sm:flex-row items-center justify-center sm:justify-start">
                                                    <span class="line-through text-gray-500 mr-2">â‚¹<%= item.productId.price*item.productCount %></span>
                                                    <div class="flex items-center">
                                                        <i class="fas fa-rupee-sign mr-1"></i>
                                                        
                                                        <%= (Number(item.productPrice) * Number(item.productCount)).toFixed(0) %>.00 %> 
                                                        <%if(item.productId.discount>0){%>
                                                            <p class="text-sm text-green-500 ml-2"><%= item.productId.discount %>% off</p>
                                                            <%}%>
                                                       
                                                    </div>
                                                </div>
                                                <span class="inline-block mt-2 status-badge <%= 
                                                    item.productStatus === 'Pending' ? 'bg-yellow-100 text-yellow-800' : 
                                                    item.productStatus === 'Confirmed' ? 'bg-blue-100 text-blue-800' : 
                                                    item.productStatus === 'Shipped' ? 'bg-purple-100 text-purple-800' : 
                                                    item.productStatus === 'Delivered' ? 'bg-green-100 text-green-800' : 
                                                    'bg-red-100 text-red-800'
                                                %>">
                                                    <%= item.productStatus %>
                                                </span>
                                            </div>
                                            <div class="flex-shrink-0 mt-4 sm:mt-0 text-center sm:text-right w-full sm:w-auto">
                                                <% if (
                                                    item.productStatus !== 'Returned' &&
                                                    item.productStatus !== 'Cancelled' &&
                                                    item.productStatus !== 'Delivered' &&
                                                    item.productStatus !== 'Send Return Request' &&
                                                    item.productStatus !== 'Order Not Conform'
                                                ) { %>
                                                    <button 
                                                        class="btn btn-cancel cancel-btn w-full sm:w-auto"
                                                        data-order-id="<%= orders._id %>"
                                                        data-payment-id="<%= orders.paymentDetails?.razorpay_payment_id || '' %>"
                                                        data-product-id="<%= item.productId._id || item.productId %>"
                                                    >
                                                        Cancel Order
                                                    </button>
                                                <% } else if (item.productStatus === 'Delivered') { %>
                                                    <button 
                                                        class="btn btn-return return-btn w-full sm:w-auto"
                                                        data-order-id="<%= orders._id %>"
                                                        data-payment-id="<%= orders.paymentDetails?.razorpay_payment_id || '' %>"
                                                        data-product-id="<%= item.productId._id || item.productId %>"
                                                    >
                                                        Return Order
                                                    </button>
                                                <% } else if (item.productStatus === 'Order Not Conform') { %>
                                                    <button onclick="paynow('<%= orders._id %>', this)" class="w-full sm:w-auto"> Buy Now</button>
                                                <% } %>
                                            </div>
                                        </div>
                                    <% }); %>
                                </div>

                                <!-- Order Summary -->
                                <div class="bg-gray-100 rounded-lg p-6 space-y-4">
                                    <h3 class="text-lg font-semibold text-gray-900 mb-4">Order Summary</h3>
                                    <div class="space-y-2">
                                        <div class="flex justify-between text-sm">
                                            <span class="text-gray-600">Subtotal</span>
                                            <span class="font-medium text-gray-900">
                                                <i class="fas fa-rupee-sign"></i> 
                                                <%= (orders.totalAmount-100).toFixed(2) %>
                                            </span>
                                        </div>
                                        <div class="flex justify-between text-sm">
                                            <span class="text-gray-600">Shipping</span>
                                            <span class="font-medium text-gray-900">
                                                <i class="fas fa-rupee-sign"></i> 100.00
                                            </span>
                                        </div>
                                        <% if (orders.discount > 0) { %>
                                            <div class="flex justify-between text-sm text-green-600">
                                                <span>Coupon Discount</span>
                                                <span>
                                                    -<i class="fas fa-rupee-sign"></i> 
                                                    <%= orders.discount.toFixed(0) %>.00
                                                </span>
                                            </div>
                                        <% } %>
                                        <div class="border-t border-gray-200 pt-3 mt-3">
                                            <div class="flex justify-between font-semibold">
                                                <span class="text-gray-900">Total</span>
                                                <span class="text-gray-900">
                                                    <i class="fas fa-rupee-sign"></i> 
                                                    <%= (orders.totalAmount).toFixed(0) %>.00
                                                </span>
                                            </div>
                                        </div>
                                    </div>

                                    <!-- Shipping Address -->
                                    <div class="mt-6 bg-white p-4 rounded-lg border border-gray-200">
                                        <h3 class="text-lg font-semibold text-gray-900 mb-3">Shipping Address</h3>
                                        <% if (orders.shippingAddress) { %>
                                            <address class="not-italic text-sm text-gray-700 text-center sm:text-left">
                                                <p class="text-gray-600">Name: <%= orders.shippingAddress.name %></p>
                                                <p class="text-gray-600">State: <%= orders.shippingAddress.state %></p>
                                                <p class="text-gray-600">City: <%= orders.shippingAddress.city %></p>
                                                <p class="text-gray-600">Address: <%= orders.shippingAddress.address %></p>
                                                <p class="text-gray-600">Pincode: <%= orders.shippingAddress.pincode %></p>
                                                <p class="text-gray-600">Mobile: <%= orders.shippingAddress.mobile %></p>
                                            </address>


                                           
                                        <% } else { %>
                                            
                                            <p class="text-gray-500">No shipping address available</p>
                                        <% } %>
                                    </div>
                                </div>
                            </div>
                        </div>
                    <% }); %>
                <% } else { %>
                    <!-- Empty State -->
                    <div class="text-center py-16 bg-white rounded-lg shadow-md">
                        <svg class="mx-auto h-24 w-24 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19.5 12c0-1.232-.046-2.453-.138-3.662a4.006 4.006 0 00-3.7-3.7 48.678 48.678 0 00-7.324 0 4.006 4.006 0 00-3.7 3.7c-.017.22-.032.441-.046.662M19.5 12l3-3m-3 3l-3-3m-12 3c0 1.232.046 2.453.138 3.662a4.006 4.006 0 003.7 3.7 48.678 48.678 0 007.324 0 4.006 4.006 0 003.7-3.7c.017-.22.032-.441.046-.662M4.5 12l3 3m-3-3l-3 3" />
                        </svg>
                        <h3 class="text-xl font-semibold text-gray-800 mb-2 mt-4">No Orders Yet</h3>
                        <p class="text-gray-500 mb-6">Start exploring our products and place your first order!</p>
                        <a href="/wine" class="btn bg-blue-600 text-white hover:bg-blue-700">
                            Browse Products
                        </a>
                    </div>
                <% } %>
                
            </div>
            

          
     <!-- Cancel Order Modal -->
  <!-- Modal for Cancel Order -->
<div id="cancel-modal" class="fixed inset-0 z-50 hidden">
    <div class="fixed inset-0 bg-black bg-opacity-50 transition-opacity"></div>
    <div class="fixed inset-0 z-10 overflow-y-auto">
        <div class="flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0">
            <div class="relative transform overflow-hidden rounded-lg bg-white text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg">
                <form id="cancel-form" class="p-6">
                    <h3 class="text-lg font-semibold text-gray-900 mb-4">Cancel Order</h3>
                    
                    <input type="hidden" name="orderId" id="cancel-order-id">
                    <input type="hidden" name="productId" id="cancel-product-id">
                    <input type="hidden" name="razorpay_payment_id" id="cancel-payment-id">
                    
                    <div class="mb-4">
                        <label for="cancel-reason" class="block text-sm font-medium text-gray-700 mb-2">
                            Please provide a reason for cancellation
                        </label>
                        <textarea id="cancel-reason" 
                                  name="reason" 
                                  rows="3" 
                                  class="w-full rounded-md border border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500"
                                  required></textarea>
                    </div>

                    <div class="mt-6 flex justify-end gap-3">
                        <button type="button" 
                                onclick="closeCancelModal()" 
                                class="px-4 py-2 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300 transition-colors">
                            Close
                        </button>
                        <button type="submit" 
                                class="px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-600 transition-colors">
                            Confirm Cancel
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

   <!-- Modal for Return Order -->
<div id="return-modal" class="fixed inset-0 z-50 hidden">
    <div class="fixed inset-0 bg-black bg-opacity-50 transition-opacity"></div>
    <div class="fixed inset-0 z-10 overflow-y-auto">
        <div class="flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0">
            <div class="relative transform overflow-hidden rounded-lg bg-white text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg">
                <form id="return-form" class="p-6">
                    <h3 class="text-lg font-semibold text-gray-900 mb-4">Return Order</h3>
                    
                    <input type="hidden" name="orderId" id="return-order-id">
                    <input type="hidden" name="productId" id="return-product-id">
                    <input type="hidden" name="razorpay_payment_id" id="return-payment-id">
                    
                    <div class="mb-4">
                        <label for="return-reason" class="block text-sm font-medium text-gray-700 mb-2">
                            Please provide a reason for return
                        </label>
                        <textarea id="return-reason" 
                                  name="reason" 
                                  rows="3" 
                                  class="w-full rounded-md border border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500"
                                  required></textarea>
                    </div>

                    <div class="mt-6 flex justify-end gap-3">
                        <button type="button" 
                                onclick="closeReturnModal()" 
                                class="px-4 py-2 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300 transition-colors">
                            Close
                        </button>
                        <button type="submit" 
                                class="px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors">
                            Confirm Return
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


    <script>
       // Handle "Cancel Order" button click
document.addEventListener('click', async function (e) {
    if (e.target.classList.contains('cancel-btn')) {
        const orderId = e.target.getAttribute('data-order-id');
        const paymentId = e.target.getAttribute('data-payment-id');
        const productId = e.target.getAttribute('data-product-id');

        console.log('Order ID:', orderId);
        console.log('Product ID:', productId);
        console.log('Payment ID:', paymentId);

        // Open the modal and populate inputs
        const modal = document.getElementById('cancel-modal');
        modal.style.display = 'block';

        document.getElementById('cancel-order-id').value = orderId;
        document.getElementById('cancel-product-id').value = productId;
        document.getElementById('cancel-payment-id').value = paymentId;
    }
});

// Close the modal
function closeCancelModal() {
    document.getElementById('cancel-modal').style.display = 'none';
}

// Handle form submission to cancel the order
document.getElementById('cancel-form').addEventListener('submit', async function (e) {
    e.preventDefault();

    const orderId = document.getElementById('cancel-order-id').value;
    const productId = document.getElementById('cancel-product-id').value;
    const paymentId = document.getElementById('cancel-payment-id').value;
    const reason = document.getElementById('cancel-reason').value;

    try {
        const response = await fetch('/orders/cancel', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                orderId,
                productId,
                paymentId,
                reason,
            }),
        });

        const data = await response.json();

        if (response.ok) {
            Swal.fire({
                title: 'Order Cancelled',
                text: `Your order has been cancelled successfully.`,
                icon: 'success',
                confirmButtonText: 'OK',
            }).then(() => {
                location.reload();
            });
        } else {
            Swal.fire({
                title: 'Error',
                text: data.message || 'Something went wrong!',
                icon: 'error',
                confirmButtonText: 'OK',
            });
        }
    } catch (error) {
        console.error('Error:', error);
        Swal.fire({
            title: 'Error',
            text: 'Unable to cancel the order. Please try again later.',
            icon: 'error',
            confirmButtonText: 'OK',
        });
    }
});



        // Handle "Return Order" button click
document.addEventListener('click', async function (e) {
    if (e.target.classList.contains('return-btn')) {
        const orderId = e.target.getAttribute('data-order-id');
        const paymentId = e.target.getAttribute('data-payment-id');
        const productId = e.target.getAttribute('data-product-id');

        console.log('Order ID:', orderId);
        console.log('Product ID:', productId);
        console.log('Payment ID:', paymentId);

        // Open the modal and populate inputs
        const modal = document.getElementById('return-modal');
        modal.style.display = 'block';

        document.getElementById('return-order-id').value = orderId;
        document.getElementById('return-product-id').value = productId;
        document.getElementById('return-payment-id').value = paymentId;
    }
});

// Close the modal
function closeReturnModal() {
    document.getElementById('return-modal').style.display = 'none';
}

// Handle form submission for returning the order
document.getElementById('return-form').addEventListener('submit', async function (e) {
    e.preventDefault();

    const orderId = document.getElementById('return-order-id').value;
    const productId = document.getElementById('return-product-id').value;
    const paymentId = document.getElementById('return-payment-id').value;
    const reason = document.getElementById('return-reason').value;

    try {
        const response = await fetch('/orders/return', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                orderId,
                productId,
                paymentId,
                reason,
            }),
        });

        const data = await response.json();

        if (response.ok) {
            Swal.fire({
                title: 'Return Request Sent',
                text: `Your return request has been sent successfully.`,
                icon: 'success',
                confirmButtonText: 'OK',
            }).then(() => {
                location.reload();
            });
        } else {
            Swal.fire({
                title: 'Error',
                text: data.message || 'Something went wrong!',
                icon: 'error',
                confirmButtonText: 'OK',
            });
        }
    } catch (error) {
        console.error('Error:', error);
        Swal.fire({
            title: 'Error',
            text: 'Unable to process the return request. Please try again later.',
            icon: 'error',
            confirmButtonText: 'OK',
        });
    }
});



async function placeOrder(orderData) {
    console.log('Attempting to place order...');

    try {
        const response = await fetch('/api/place-pending-order', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(orderData),
        });

        if (!response.ok) {
            const errorResponse = await response.json();
            throw new Error(errorResponse.message || 'Order placement failed');
        }

        const result = await response.json();
        console.log('Order placement response:', result);
        return result;
    } catch (error) {
        console.error('Error during order placement:', error.message);
        throw error;
    }
}


async function paynow(orderId, element) {
    try {
        if (element) {
            element.disabled = true;
            element.textContent = 'Processing...';
        }

        const orderResponse = await fetch(`/api/order/${orderId}`);
        const orderData = await orderResponse.json();

        if (!orderData || !orderData.totalAmount) {
            throw new Error('Invalid order data');
        }

        async function initiateRazorpayPayment(orderData) {
            const response = await fetch(`/payment-render/${orderData.totalAmount}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
            });

            if (!response.ok) {
                throw new Error('Payment initialization failed');
            }

            const paymentData = await response.json();

            return new Promise((resolve, reject) => {
                const options = {
                    key: "<%= process.env.RAZOR_KEY_ID %>",
                    amount: orderData.totalAmount * 100,
                    currency: "INR",
                    name: "Wine Heaven",
                    description: "Order Repayment",
                    order_id: paymentData.orderID,
                    handler: function (response) {
                        orderData.razorpay_payment_id = response.razorpay_payment_id;
                        orderData.razorpay_order_id = response.razorpay_order_id;
                        orderData.razorpay_signature = response.razorpay_signature;
                        resolve(orderData); // Resolve the promise with the updated orderData
                    },
                    modal: {
                        ondismiss: function () {
                            reject(new Error('Payment cancelled'));
                        },
                    },
                    theme: {
                        color: "#600018",
                    },
                };

                const rzp1 = new Razorpay(options);
                rzp1.open();
            });
        }

        const paidOrderData = await initiateRazorpayPayment(orderData);
        const orderResult = await placeOrder(paidOrderData);

        if (orderResult.success) {
            console.log('Order successfully placed. Redirecting to confirmation page...');
            window.location.href = "/order-confirmation";
        } else {
            throw new Error(orderResult.message || 'Order placement unsuccessful');
        }
    } catch (error) {
        console.error('Payment Error:', error);

        if (typeof Swal !== 'undefined') {
            Swal.fire({
                icon: 'error',
                title: 'Payment Failed',
                text: error.message || 'Something went wrong!',
                confirmButtonColor: '#600018',
            });
        } else {
            alert('Payment failed: ' + (error.message || 'Unknown error'));
        }
    } finally {
        if (element) {
            element.disabled = false;
            element.textContent = 'Buy Now';
        }
    }
}

    </script>
   
</body>
</html>