<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add New Address</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <style>
        .error-message {
            color: red;
            font-size: 0.875rem;
            margin-top: 0.25rem;
        }
        .hidden {
            display: none;
        }
        .bg-charcoal {
            background-color:#600018;
            color: white;
        }

        @media (max-width: 768px) {
            .sidebar {
                display: none; /* Hide sidebar on small screens */
            }
            .main-content {
                margin: 0; /* Adjust content margin */
            }
            .form-container {
                margin: 0 auto; /* Center the form */
                padding: 1rem;
            }
        }
    </style>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body class="bg-gray-100 min-h-screen flex flex-col">
    <%- include('../partials/userHeader.ejs') %>
    <div class="flex flex-1 mt-20">

        <div class="main-content flex-grow bg-gray-100 p-4 mt-5  form-container max-w-2xl mx-auto">
            <div class="bg-white shadow-md rounded-lg p-8">
                <h1 class="text-2xl font-semibold mb-6 text-gray-800">Add a New Address</h1>
                <form id="addressForm" action="/add-address" method="POST" class="space-y-4" onsubmit="return validateForm()">
                    <div>
                        <label for="name" class="block text-sm font-medium text-gray-700">Name</label>
                        <input type="text" id="name" name="name" maxlength="15" class="mt-1 block w-full p-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" required>
                        <p id="name-error" class="error-message hidden">Name must be at least 3 characters long, cannot start with a space, and must start with an uppercase letter.</p>
                    </div>
                    <div>
                        <label for="mobile" class="block text-sm font-medium text-gray-700">10-digit mobile number</label>
                        <input type="text" id="mobile" name="mobile" maxlength="10" class="mt-1 block w-full p-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" required>
                        <p id="mobile-error" class="error-message hidden">Mobile number must be exactly 10 digits and cannot start with 0.</p>
                    </div>
                    <div>
                        <label for="pincode" class="block text-sm font-medium text-gray-700">Pincode</label>
                        <input type="text" id="pincode" maxlength="6" name="pincode" class="mt-1 block w-full p-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" required>
                        <p id="pincode-error" class="error-message hidden">Pincode must be exactly 6 digits and cannot start with 0.</p>
                    </div>
                    <div>
                        <label for="address" class="block text-sm font-medium text-gray-700">Address (Area and Street)</label>
                        <input type="text" id="address" name="address" maxlength="25" class="mt-1 block w-full p-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" required>
                        <p id="address-error" class="error-message hidden">Address must be at least 5 characters long.</p>
                    </div>
                    <div>
                        <label for="city" class="block text-sm font-medium text-gray-700">City/District/Town</label>
                        <input type="text" id="city" maxlength="25" name="city" class="mt-1 block w-full p-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" required>
                        <p id="city-error" class="error-message hidden">City/District/Town must be at least 3 characters long.</p>
                    </div>
                    <div>
                        <label for="state" class="block text-sm font-medium text-gray-700">State</label>
                        <select id="state" name="state" class="mt-1 block w-full p-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" required>
                            <option value="">--Select State--</option>
                            <option value="New York">New York</option>
                            <option value="Florida">Florida</option>
                            <option value="California">California</option>
                        </select>
                        <p id="state-error" class="error-message hidden">Please select a state.</p>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700">Address Type</label>
                        <div class="mt-2 space-x-4">
                            <label class="inline-flex items-center">
                                <input type="radio" id="home" name="addressType" value="Home" class="form-radio text-indigo-600" required>
                                <span class="ml-2">Home</span>
                            </label>
                            <label class="inline-flex items-center">
                                <input type="radio" id="work" name="addressType" value="Work" class="form-radio text-indigo-600" required>
                                <span class="ml-2">Work</span>
                            </label>
                        </div>
                        <p id="addressType-error" class="error-message hidden">Please select an address type.</p>
                    </div>
                    <button type="submit" class=" bg-charcoal w-full py-2 px-4 font-semibold rounded-md shadow-md  focus:outline-none focus:ring-2 ">Save</button>
                </form>
            </div>
        </div>
    </div>
    <%- include('../partials/userFooter.ejs') %>

    <script>
        function validateForm() {
            let isValid = true;

            const name = document.getElementById('name').value.trim();
            const mobile = document.getElementById('mobile').value.trim();
            const pincode = document.getElementById('pincode').value.trim();
            const address = document.getElementById('address').value.trim();
            const city = document.getElementById('city').value.trim();
            const state = document.getElementById('state').value;
            const addressTypeInputs = document.getElementsByName('addressType');

            const nameError = document.getElementById('name-error');
            const mobileError = document.getElementById('mobile-error');
            const pincodeError = document.getElementById('pincode-error');
            const addressError = document.getElementById('address-error');
            const cityError = document.getElementById('city-error');
            const stateError = document.getElementById('state-error');
            const addressTypeError = document.getElementById('addressType-error');

            // Validate the name field
            if (name.length < 3 || name.charAt(0) === ' ' || name.charAt(0) !== name.charAt(0).toUpperCase()) {
                nameError.classList.remove('hidden');
                isValid = false;
            } else {
                nameError.classList.add('hidden');
            }

            // Validate the mobile number field
            const mobilePattern = /^[1-9][0-9]{9}$/;
            if (!mobilePattern.test(mobile)) {
                mobileError.classList.remove('hidden');
                isValid = false;
            } else {
                mobileError.classList.add('hidden');
            }

            // Validate the pincode field
            const pincodePattern = /^[1-9][0-9]{5}$/;
            if (!pincodePattern.test(pincode)) {
                pincodeError.classList.remove('hidden');
                isValid = false;
            } else {
                pincodeError.classList.add('hidden');
            }

            // Validate the address field
            if (address.length < 5) {
                addressError.classList.remove('hidden');
                isValid = false;
            } else {
                addressError.classList.add('hidden');
            }

            // Validate the city field
            if (city.length < 3) {
                cityError.classList.remove('hidden');
                isValid = false;
            } else {
                cityError.classList.add('hidden');
            }

            // Validate the state field
            if (state === "") {
                stateError.classList.remove('hidden');
                isValid = false;
            } else {
                stateError.classList.add('hidden');
            }

            // Validate the address type field
            let addressTypeSelected = false;
            for (const addressTypeInput of addressTypeInputs) {
                if (addressTypeInput.checked) {
                    addressTypeSelected = true;
                    break;
                }
            }

            if (!addressTypeSelected) {
                addressTypeError.classList.remove('hidden');
                isValid = false;
            } else {
                addressTypeError.classList.add('hidden');
            }

            if (!isValid) {
                return false;
            }

            Swal.fire({
                title: 'Success!',
                text: 'Address added successfully.',
                icon: 'success',
                confirmButtonText: 'OK'
            });
            return true;
        }
    </script>
</body>
</html>
